# gcp-terraform-project/source_code_for_pipeline/cloudbuild.yaml

steps:
# 1. Збірка Docker образу
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA', './source_code_for_pipeline/app']
  id: 'Build Docker Image'

# 2. Публікація Docker образу
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA']
  id: 'Push to GCR'

# 3. Розгортання в GKE
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud container clusters get-credentials "${_GKE_CLUSTER_NAME}" \
      --region "${_GKE_LOCATION}" \
      --project "$PROJECT_ID"
    
    echo "Deploying image gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA to GKE cluster ${_GKE_CLUSTER_NAME}"
    sed "s|IMAGE_PLACEHOLDER|gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA|g" ./source_code_for_pipeline/kubernetes/deployment.yaml > /tmp/deployment.yaml
    cat /tmp/deployment.yaml
    kubectl apply -f /tmp/deployment.yaml
    kubectl rollout status deployment/my-simple-app --timeout=300s
  id: 'Deploy to GKE'

images:
- 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA'

# Substitutions, які передаються з тригера Terraform,
# будуть доступні тут. Можна також визначити значення за замовчуванням.
substitutions:
  _IMAGE_NAME: 'my-default-app-image' # Це значення буде використано, якщо _IMAGE_NAME не передано з тригера

# --- ВАЖЛИВА СЕКЦІЯ ---
options:
  logging: CLOUD_LOGGING_ONLY # Або "NONE", якщо не потрібні логи (не рекомендується)